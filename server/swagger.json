{
    "openapi": "3.0.0",
    "info": {
        "version": "1.0.0",
        "title": "Test typescript swagger",
        "description": "A minimal and easy to follow example of what you need to create a CRUD style API in NodeJs using TypeScript",
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        }
    },
    "tags": [
        {
            "name": "Users",
            "description": "API for users, posts and comments in system"
        }
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/v1/users/get-user/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "description": "ID of the user that we want to match",
                    "type": "string"
                }
            ],
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get user with given ID",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "User with id",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "nullable": true
                                        },
                                        "data": {
                                            "$ref": "#/definitions/UserNoId"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Failed. User not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/definitions/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/users/update-user/{id}": {
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "update user with given id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "User with id",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    }
                ],
                "requestBody": {
                    "description": "User object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/UserNoId"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/definitions/Success"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Failed. User was not updated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/definitions/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/users/get-all-users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get all users in system",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "nullable": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "$ref": "#/definitions/User"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Failed. Users not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/definitions/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/users/login": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Create new user in system",
                "requestBody": {
                    "description": "User object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "login": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/definitions/Success"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Failed. User was not created.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/definitions/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/users/create-user": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Create new user in system",
                "requestBody": {
                    "description": "User object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/UserNoId"
                            }
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/definitions/Success"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Failed. User was not created.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/definitions/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/movies/get-all-movies": {
            "get": {
                "tags": [
                    "Movies"
                ],
                "summary": "Get all movies in system",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "nullable": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "$ref": "#/definitions/Movies"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Failed. Movies not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/definitions/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/movies/get-movie/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "description": "ID of the movie that we want to match",
                    "type": "string"
                }
            ],
            "get": {
                "tags": [
                    "Movies"
                ],
                "summary": "Get movie with given ID",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "Movie with id",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "nullable": true
                                        },
                                        "data": {
                                            "$ref": "#/definitions/MoviesNoId"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Failed. Movie not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/definitions/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/movies/get-movie-by-user/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "description": "ID of the movie that we want to match",
                    "type": "string"
                }
            ],
            "get": {
                "tags": [
                    "Movies"
                ],
                "summary": "Get movie with given ID",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "Movie with Userid",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "nullable": true
                                        },
                                        "data": {
                                            "$ref": "#/definitions/MoviesNoId"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Failed. Movie not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/definitions/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/movies/create-movie": {
            "post": {
                "tags": [
                    "Movies"
                ],
                "summary": "Create new movie in system",
                "requestBody": {
                    "description": "Movie object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/MoviesNoId"
                            }
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/definitions/Success"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Failed. Movie was not created.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/definitions/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/movies/update-movie/{id}": {
            "put": {
                "tags": [
                    "Movies"
                ],
                "summary": "update movie with given id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "Movie with id",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Movie object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/MoviesNoId"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/definitions/Success"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Failed. Movie was not updated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/definitions/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/movies/delete-movie/{id}": {
            "delete": {
                "tags": [
                    "Movies"
                ],
                "summary": "delete movie with given id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "Movie with id",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/definitions/Success"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Failed. Movie was not deleted.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/definitions/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/servicesorders/get-all-servicesorders": {
            "get": {
                "tags": [
                    "ServiceOrder"
                ],
                "summary": "Get all servicesorders in system",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "nullable": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "$ref": "#/definitions/Movies"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Failed. Movies not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/definitions/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/servicesorders/get-servicesorders/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "description": "ID of the servicesorders that we want to match",
                    "type": "string"
                }
            ],
            "get": {
                "tags": [
                    "ServiceOrder"
                ],
                "summary": "Get movie with given ID",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "Movie with id",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "nullable": true
                                        },
                                        "data": {
                                            "$ref": "#/definitions/MoviesNoId"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Failed. Movie not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/definitions/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/servicesorders/get-servicesorders-by-user/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "description": "ID of the servicesorders that we want to match",
                    "type": "string"
                }
            ],
            "get": {
                "tags": [
                    "ServiceOrder"
                ],
                "summary": "Get movie with given ID",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "Movie with id",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "nullable": true
                                        },
                                        "data": {
                                            "$ref": "#/definitions/MoviesNoId"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Failed. Movie not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/definitions/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/servicesorders/create-servicesorders": {
            "post": {
                "tags": [
                    "ServiceOrder"
                ],
                "summary": "Create new servicesorders in system",
                "requestBody": {
                    "description": "Movie object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/MoviesNoId"
                            }
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/definitions/Success"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Failed. Movie was not created.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/definitions/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/servicesorders/update-servicesorders/{id}": {
            "put": {
                "tags": [
                    "ServiceOrder"
                ],
                "summary": "update servicesorders with given id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "Movie with id",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Movie object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/MoviesNoId"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/definitions/Success"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Failed. Movie was not updated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/definitions/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/servicesorders/delete-servicesorders/{id}": {
            "delete": {
                "tags": [
                    "ServiceOrder"
                ],
                "summary": "delete servicesorders with given id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "Movie with id",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/definitions/Success"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Failed. Movie was not deleted.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/definitions/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/services/get-all-services": {
            "get": {
                "tags": [
                    "Services"
                ],
                "summary": "Get all services in system",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "nullable": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "$ref": "#/definitions/Service"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Failed. Service not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/definitions/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/services/get-service/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "description": "ID of the service that we want to match",
                    "type": "string"
                }
            ],
            "get": {
                "tags": [
                    "Services"
                ],
                "summary": "Get service with given ID",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "Service with id",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "nullable": true
                                        },
                                        "data": {
                                            "$ref": "#/definitions/ServiceNoId"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Failed. Service not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/definitions/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/services/create-service": {
            "post": {
                "tags": [
                    "Services"
                ],
                "summary": "Create new service in system",
                "requestBody": {
                    "description": "Service object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/ServiceNoId"
                            }
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/definitions/Success"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Failed. Service was not created.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/definitions/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/service/update-service/{id}": {
            "put": {
                "tags": [
                    "Services"
                ],
                "summary": "update service with given id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "Service with id",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Service object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/ServiceNoId"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/definitions/Success"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Failed. Service was not updated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/definitions/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/services/delete-service/{id}": {
            "delete": {
                "tags": [
                    "Services"
                ],
                "summary": "delete service with given id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "Service with id",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/definitions/Success"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Failed. Service was not deleted.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/definitions/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/payments/get-all-payments": {
            "get": {
                "tags": [
                    "Payments"
                ],
                "summary": "Get all payments in system",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "nullable": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "$ref": "#/definitions/Payment"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Failed. Payment not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/definitions/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/payments/update-payment-status/{id}": {
            "put": {
                "tags": [
                    "Payments"
                ],
                "summary": "update payment with given id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "Payment with id",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/definitions/Success"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Failed. Payment status was not updated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/definitions/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/payments/get-payment/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "description": "ID of the payment that we want to match",
                    "type": "string"
                }
            ],
            "get": {
                "tags": [
                    "Payments"
                ],
                "summary": "Get payment with given ID",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "Payment with id",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "nullable": true
                                        },
                                        "data": {
                                            "$ref": "#/definitions/Payment"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Failed. Payment not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/definitions/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/payments/create-payment": {
            "post": {
                "tags": [
                    "Payments"
                ],
                "summary": "Create new payment in system",
                "requestBody": {
                    "description": "Payment object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/PaymentNoId"
                            }
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/definitions/Success"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Failed. Payment was not created.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/definitions/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/payments/update-payment/{id}": {
            "put": {
                "tags": [
                    "Payments"
                ],
                "summary": "update payment with given id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "Payment with id",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Movie object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/PaymentNoId"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/definitions/Success"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Failed. Payment was not updated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/definitions/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/payments/updateStripe/{id}": {
            "put": {
                "tags": [
                    "Payments"
                ],
                "summary": "update payment with given id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "Payment with id",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Movie object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/PaymentNoId"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/definitions/Success"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Failed. Payment was not updated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/definitions/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/payments/delete-payment/{id}": {
            "delete": {
                "tags": [
                    "Payments"
                ],
                "summary": "delete payment with given id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "Payment with id",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/definitions/Success"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Failed. Payment was not deleted.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/definitions/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/servicepayments/get-all-servicepayments": {
            "get": {
                "tags": [
                    "ServicePayments"
                ],
                "summary": "Get all ServicePayments in system",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "nullable": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "$ref": "#/definitions/ServicePayment"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Failed. ServicePayment not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/definitions/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/servicepayments/get-servicepayment/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "description": "ID of the payment that we want to match",
                    "type": "string"
                }
            ],
            "get": {
                "tags": [
                    "ServicePayments"
                ],
                "summary": "Get servicepayment with given ID",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "ServicePayment with id",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "nullable": true
                                        },
                                        "data": {
                                            "$ref": "#/definitions/ServicePaymentNoId"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Failed. ServicePayment not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/definitions/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/servicepayments/create-servicepayment": {
            "post": {
                "tags": [
                    "ServicePayments"
                ],
                "summary": "Create new servicepayment in system",
                "requestBody": {
                    "description": "Payment object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/ServicePaymentNoId"
                            }
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/definitions/Success"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Failed. ServicePayment was not created.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/definitions/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/contact-us/create-contact-us": {
            "post": {
                "tags": [
                    "contact-us"
                ],
                "summary": "Create new servicepayment in system",
                "requestBody": {
                    "description": "Payment object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/ContactUs"
                            }
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/definitions/Success"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Failed. ServicePayment was not created.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/definitions/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/servicepayments/update-servicepayment/{id}": {
            "put": {
                "tags": [
                    "ServicePayments"
                ],
                "summary": "update servicepayment with given id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "ServicePayment with id",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    }
                ],
                "requestBody": {
                    "description": "ServicePayment object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/ServicePaymentNoId"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/definitions/Success"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Failed. ServicePayments was not updated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/definitions/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/servicepayments/delete-servicepayment/{id}": {
            "delete": {
                "tags": [
                    "ServicePayments"
                ],
                "summary": "delete servicepayments with given id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "ServicePayments with id",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/definitions/Success"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Failed. ServicePayment was not deleted.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/definitions/Error"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "id": {
            "properties": {
                "id": {
                    "type": "number"
                }
            }
        },
        "Success": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "boolean"
                },
                "errors": {
                    "type": "object"
                },
                "data": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "number"
                        }
                    }
                }
            }
        },
        "Error": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "boolean"
                },
                "data": {
                    "type": "object",
                    "nullable": true
                },
                "errors": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "string"
                        },
                        "message": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "User": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "UserNoId": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "oldPassword": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "Users": {
            "type": "object",
            "properties": {
                "users": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/User"
                    }
                }
            }
        },
        "Payment": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "number"
                },
                "usersId": {
                    "type": "number"
                },
                "time": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "status": {
                    "type": "string"
                },
                "services": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "number"
                            },
                            "title": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "UpdateStripe": {
            "type": "object",
            "properties": {
                "paymentId": {
                    "type": "number"
                },
                "transactionID": {
                    "type": "string"
                }
            }
        },
        "PaymentNoId": {
            "type": "object",
            "properties": {
                "usersId": {
                    "type": "number"
                },
                "title": {
                    "type": "string"
                },
                "time": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "status": {
                    "type": "string"
                },
                "cardNumber": {
                    "type": "string"
                },
                "servicesId": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                }
            }
        },
        "Payments": {
            "type": "object",
            "properties": {
                "users": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/Payment"
                    }
                }
            }
        },
        "ContactUs": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "number": {
                    "type": "string"
                },
                "company": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "service": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            }
        },
        "Movies": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "genre": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "mail": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "urls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "usersId": {
                    "type": "number"
                }
            }
        },
        "MoviesNoId": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string"
                },
                "genre": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "urls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "usersId": {
                    "type": "number"
                }
            }
        },
        "Movie": {
            "type": "object",
            "properties": {
                "users": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/Movies"
                    }
                }
            }
        },
        "ServicePayment": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "number"
                },
                "service": {
                    "type": "number"
                },
                "payment": {
                    "type": "number"
                }
            }
        },
        "ServicePaymentNoId": {
            "type": "object",
            "properties": {
                "service": {
                    "type": "number"
                },
                "payment": {
                    "type": "number"
                }
            }
        },
        "ServicePayments": {
            "type": "object",
            "properties": {
                "users": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/ServicePayment"
                    }
                }
            }
        },
        "Service": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "number"
                },
                "title": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "photo": {
                    "type": "string"
                }
            }
        },
        "ServiceNoId": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "photo": {
                    "type": "string"
                }
            }
        },
        "Services": {
            "type": "object",
            "properties": {
                "users": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/Service"
                    }
                }
            }
        }
    }
}